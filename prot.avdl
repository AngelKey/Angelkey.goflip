
@namespace("flip")

protocol flip {

  // Time in milliseconds since the epoch
  @typedef("long")
  record Time {}

  @typedef("bytes")
  record GameID {}

  @typedef("bytes")
  record UID {}

  @typedef("bytes")
  record DeviceID {}

  record Start {
    Time registrationEndsAt;
    // How long the commitment period lasts
    long commitmentPeriodMsec;
    // How long the reveal period lasts
    long revealPeriodMsec;
    FlipParameters params;
  }

  record UserDevice {
    UID user;
    DeviceID device;
  }

  record RegistrationComplete {
    array<UserDevice> player;
  }

  record Register {
  }

  enum FlipType {
    INTS_1,
    SHUFFLE_2
  }

  enum IntType {
    FIXED_1,
    BIG_2,
    BOOL_3
  }

  variant FlipParametersInt switch (IntType t) {
  case BIG: bytes;
  case FIXED: long;
  case BOOL: void;
  }

  variant FlipParameters switch (FlipType t) {
  case INTS: array<FlipParametersInt>;
  case SHUFFLE: long;
  }

  enum Stage {
    START_1,
    REGISTER_2,
    REGISTRATION_COMPLETE_3,
    COMMITMENT_4,
    REVEAL_5
  }

  fixed Secret(32);

  variant GameMessageBody switch (Stage s) {
  case START: Start;
  case REGISTRATION_COMPLETE: RegistrationComplete;
  case COMMITMENT: Secret;
  case REVEAL: Secret;
  }

  record GameMessage {
    GameID gameID;
    GameMessageBody body;
  }

}